/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Metriport from "../../..";

/**
 * A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
 */
export interface TerminologyCapabilities extends Metriport.fhir.BaseResource {
    resourceType: "TerminologyCapabilities";
    /** An absolute URI that is used to identify this terminology capabilities when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this terminology capabilities is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the terminology capabilities is stored on different servers. */
    url?: Metriport.fhir.Uri;
    /** The identifier that is used to identify this version of the terminology capabilities when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the terminology capabilities author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. */
    version?: string;
    /** A natural language name identifying the terminology capabilities. This name should be usable as an identifier for the module by machine processing applications such as code generation. */
    name?: string;
    /** A short, descriptive, user-friendly title for the terminology capabilities. */
    title?: string;
    /** The status of this terminology capabilities. Enables tracking the life-cycle of the content. */
    status?: Metriport.fhir.TerminologyCapabilitiesStatus;
    /** A Boolean value to indicate that this terminology capabilities is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage. */
    experimental?: boolean;
    /** The date (and optionally time) when the terminology capabilities was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the terminology capabilities changes. */
    date?: Metriport.fhir.DateTime;
    /** The name of the organization or individual that published the terminology capabilities. */
    publisher?: string;
    /** Contact details to assist a user in finding and communicating with the publisher. */
    contact?: Metriport.fhir.ContactDetail[];
    /** A free text natural language description of the terminology capabilities from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP. */
    description?: Metriport.fhir.Markdown;
    /** The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate terminology capabilities instances. */
    useContext?: Metriport.fhir.UsageContext[];
    /** A legal or geographic region in which the terminology capabilities is intended to be used. */
    jurisdiction?: Metriport.fhir.CodeableConcept[];
    /** Explanation of why this terminology capabilities is needed and why it has been designed as it has. */
    purpose?: Metriport.fhir.Markdown;
    /** A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities. */
    copyright?: Metriport.fhir.Markdown;
    /** The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase). */
    kind?: Metriport.fhir.Code;
    /** Software that is covered by this terminology capability statement. It is used when the statement describes the capabilities of a particular software version, independent of an installation. */
    software?: Metriport.fhir.TerminologyCapabilitiesSoftware;
    /** Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program. */
    implementation?: Metriport.fhir.TerminologyCapabilitiesImplementation;
    /** Whether the server supports lockedDate. */
    lockedDate?: boolean;
    /** Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource. */
    codeSystem?: Metriport.fhir.TerminologyCapabilitiesCodeSystem[];
    /** Information about the [ValueSet/$expand](valueset-operation-expand.html) operation. */
    expansion?: Metriport.fhir.TerminologyCapabilitiesExpansion;
    /** The degree to which the server supports the code search parameter on ValueSet, if it is supported. */
    codeSearch?: Metriport.fhir.TerminologyCapabilitiesCodeSearch;
    /** Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation. */
    validateCode?: Metriport.fhir.TerminologyCapabilitiesValidateCode;
    /** Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation. */
    translation?: Metriport.fhir.TerminologyCapabilitiesTranslation;
    /** Whether the $closure operation is supported. */
    closure?: Metriport.fhir.TerminologyCapabilitiesClosure;
}
