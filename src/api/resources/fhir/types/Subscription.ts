/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Metriport from "../../..";

/**
 * The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined "channel" so that another system can take an appropriate action.
 */
export interface Subscription extends Metriport.fhir.BaseResource {
    resourceType: "Subscription";
    /** The status of the subscription, which marks the server state for managing the subscription. */
    status?: Metriport.fhir.SubscriptionStatus;
    /** Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting. */
    contact?: Metriport.fhir.ContactPoint[];
    /** The time for the server to turn the subscription off. */
    end?: Metriport.fhir.Instant;
    /** A description of why this subscription is defined. */
    reason?: string;
    /** The rules that the server should use to determine when to generate notifications for this subscription. */
    criteria?: string;
    /** A record of the last error that occurred when the server processed a notification. */
    error?: string;
    /** Details where to send notifications when resources are received that meet the criteria. */
    channel: Metriport.fhir.SubscriptionChannel;
}
