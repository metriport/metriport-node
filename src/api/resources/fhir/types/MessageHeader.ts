/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Metriport from "../../..";

/**
 * The header for a message exchange that is either requesting or responding to an action. The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
 */
export interface MessageHeader extends Metriport.fhir.BaseResource {
    resourceType: "MessageHeader";
    /** Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value "http://terminology.hl7.org/CodeSystem/message-events". Alternatively uri to the EventDefinition. */
    eventCoding?: Metriport.fhir.Coding;
    /** Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value "http://terminology.hl7.org/CodeSystem/message-events". Alternatively uri to the EventDefinition. */
    eventUri?: string;
    /** The destination application which the message is intended for. */
    destination?: Metriport.fhir.MessageHeaderDestination[];
    /** Identifies the sending system to allow the use of a trust relationship. */
    sender?: Metriport.fhir.Reference;
    /** The person or device that performed the data entry leading to this message. When there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions. */
    enterer?: Metriport.fhir.Reference;
    /** The logical author of the message - the person or device that decided the described event should happen. When there is more than one candidate, pick the most proximal to the MessageHeader. Can provide other authors in extensions. */
    author?: Metriport.fhir.Reference;
    /** The source application from which this message originated. */
    source: Metriport.fhir.MessageHeaderSource;
    /** The person or organization that accepts overall responsibility for the contents of the message. The implication is that the message event happened under the policies of the responsible party. */
    responsible?: Metriport.fhir.Reference;
    /** Coded indication of the cause for the event - indicates a reason for the occurrence of the event that is a focus of this message. */
    reason?: Metriport.fhir.CodeableConcept;
    /** Information about the message that this message is a response to. Only present if this message is a response. */
    response?: Metriport.fhir.MessageHeaderResponse;
    /** The actual data of the message - a reference to the root/focus class of the event. */
    focus?: Metriport.fhir.Reference[];
    /** Permanent link to the MessageDefinition for this message. */
    definition?: Metriport.fhir.Canonical;
}
