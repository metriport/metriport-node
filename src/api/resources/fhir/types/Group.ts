/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Metriport from "../../..";

/**
 * Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
 */
export interface Group extends Metriport.fhir.BaseResource {
    resourceType: "Group";
    /** A unique business identifier for this group. */
    identifier?: Metriport.fhir.Identifier[];
    /** Indicates whether the record for the group is available for use or is merely being retained for historical purposes. */
    active?: boolean;
    /** Identifies the broad classification of the kind of resources the group includes. */
    type?: Metriport.fhir.GroupType;
    /** If true, indicates that the resource refers to a specific group of real individuals. If false, the group defines a set of intended individuals. */
    actual?: boolean;
    /** Provides a specific type of resource the group includes; e.g. "cow", "syringe", etc. */
    code?: Metriport.fhir.CodeableConcept;
    /** A label assigned to the group for human identification and communication. */
    name?: string;
    /** A count of the number of resource instances that are part of the group. */
    quantity?: Metriport.fhir.UnsignedInt;
    /** Entity responsible for defining and maintaining Group characteristics and/or registered members. */
    managingEntity?: Metriport.fhir.Reference;
    /** Identifies traits whose presence r absence is shared by members of the group. */
    characteristic?: Metriport.fhir.GroupCharacteristic[];
    /** Identifies the resource instances that are members of the group. */
    member?: Metriport.fhir.GroupMember[];
}
