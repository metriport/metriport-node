/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Metriport from "../../..";

/**
 * A container for a collection of resources.
 */
export interface Bundle {
    resourceType: "Bundle";
    /** The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes. */
    id?: Metriport.fhir.Id;
    /** The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource. */
    meta?: Metriport.fhir.Meta;
    /** A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc. */
    implicitRules?: Metriport.fhir.Uri;
    /** The base language in which the resource is written. */
    language?: Metriport.fhir.Code;
    /** A persistent identifier for the bundle that won't change as a bundle is copied from server to server. */
    identifier?: Metriport.fhir.Identifier;
    /** Indicates the purpose of this bundle - how it is intended to be used. */
    type?: Metriport.fhir.BundleType;
    /** The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle. */
    timestamp?: Metriport.fhir.Instant;
    /** If a set of search matches, this is the total number of entries of type 'match' across all pages in the search. It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle. */
    total?: Metriport.fhir.UnsignedInt;
    /** A series of links that provide context to this bundle. */
    link?: Metriport.fhir.BundleLink[];
    /** An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only). */
    entry?: Metriport.fhir.BundleEntry[];
    /** Digital Signature - base64 encoded. XML-DSig or a JWT. */
    signature?: Metriport.fhir.Signature;
}
