/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Metriport from "../../..";

/**
 * Describes validation requirements, source(s), status and dates for one or more elements.
 */
export interface VerificationResult extends Metriport.fhir.BaseResource {
    resourceType: "VerificationResult";
    /** A resource that was validated. */
    target?: Metriport.fhir.Reference[];
    /** The fhirpath location(s) within the resource that was validated. */
    targetLocation?: string[];
    /** The frequency with which the target must be validated (none; initial; periodic). */
    need?: Metriport.fhir.CodeableConcept;
    /** The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed). */
    status?: Metriport.fhir.Code;
    /** When the validation status was updated. */
    statusDate?: Metriport.fhir.DateTime;
    /** What the target is validated against (nothing; primary source; multiple sources). */
    validationType?: Metriport.fhir.CodeableConcept;
    /** The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context). */
    validationProcess?: Metriport.fhir.CodeableConcept[];
    /** Frequency of revalidation. */
    frequency?: Metriport.fhir.Timing;
    /** The date/time validation was last completed (including failed validations). */
    lastPerformed?: Metriport.fhir.DateTime;
    /** The date when target is next validated, if appropriate. */
    nextScheduled?: string;
    /** The result if validation fails (fatal; warning; record only; none). */
    failureAction?: Metriport.fhir.CodeableConcept;
    /** Information about the primary source(s) involved in validation. */
    primarySource?: Metriport.fhir.VerificationResultPrimarySource[];
    /** Information about the entity attesting to information. */
    attestation?: Metriport.fhir.VerificationResultAttestation;
    /** Information about the entity validating information. */
    validator?: Metriport.fhir.VerificationResultValidator[];
}
